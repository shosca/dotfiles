
- repo: Shougo/denite.nvim
- repo: Shougo/unite.vim

- repo: mhinz/vim-startify
  hook_add: |
    let g:startify_session_dir = $VARPATH.'/session'

- repo: Shougo/vimproc.vim
  build: make
  on_func: vimproc#

- repo: Shougo/context_filetype.vim
  lazy: 1

- repo: Shougo/vimfiler.vim
  hook_add: |
    nnoremap <silent> <Leader>e :<C-u>VimFiler -parent -toggle<CR>
  hook_source: |
    let g:vimfiler_as_default_explorer = 1
    let g:vimfiler_file_icon = '-'
    let g:vimfiler_marked_file_icon = '✓'
    let g:vimfiler_readonly_file_icon = '✗'
    let g:vimfiler_restore_alternate_file = 1
    let g:vimfiler_safe_mode_by_default = 0
    let g:vimfiler_time_format = '%m-%d-%y %H:%M:%S'
    let g:vimfiler_tree_closed_icon = '▸'
    let g:vimfiler_tree_indentation = 1
    let g:vimfiler_tree_leaf_icon = ''
    let g:vimfiler_tree_opened_icon = '▾'
    let g:vimfiler_ignore_pattern = [
            \ '^\.git$',
            \ '^\.DS_Store$',
            \ '^\.init\.vim-rplugin\~$',
            \ '^\.netrwhist$',
            \ '\.class$'
            \]

- repo: majutsushi/tagbar
  on_cmd: TagbarToggle
  hook_source: |
    let g:tagbar_width = 40
    if executable('jsctags')
      let g:tagbar_type_javascript = { 'ctagsbin': 'jsctags' }
    endif
  hook_always: |
    noremap <silent> <F2> :TagbarToggle<CR>

- repo: sbdchd/neoformat
  on_cmd: Neoformat

- repo: benekastah/neomake
  if: has('nvim')
  on_cmd: Neomake
  hook_source: |
    let g:neomake_open_list = 2
    let g:neomake_verbose = 0
    let g:neomake_serialize_abort_on_error = 0
    let g:airline#extensions#neomake#enabled = 0
  hook_add: |
    autocmd! BufWritePost * Neomake

- repo: elzr/vim-json
  on_ft: json
  hook_source: let g:vim_json_syntax_conceal = 0
