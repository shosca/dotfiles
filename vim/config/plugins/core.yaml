
- repo: Shougo/denite.nvim

- repo: scrooloose/nerdcommenter

- repo: Shougo/vimproc.vim
  build: make
  on_func: vimproc#

- repo: hecal3/vim-leader-guide
  on_cmd: [LeaderGuide, LeaderGuideVisual]
  on_map:
    nv: <Plug>leaderguide-
  hook_always: |
    nmap <Leader>ll <Plug>leaderguide-global
    nmap <Leader>lb <Plug>leaderguide-buffer
    nnoremap <Leader>l<Space> :<C-u>LeaderGuide ';'<CR>

- repo: krisajenkins/vim-pipe

- repo: Shougo/context_filetype.vim
  lazy: 1

- repo: Shougo/vimfiler.vim
  hook_add: |
    nnoremap <silent> <Leader>e :<C-u>VimFiler -parent -toggle<CR>
  hook_source: |
    let g:vimfiler_as_default_explorer = 1
    let g:vimfiler_file_icon = '-'
    let g:vimfiler_marked_file_icon = '✓'
    let g:vimfiler_readonly_file_icon = '✗'
    let g:vimfiler_restore_alternate_file = 1
    let g:vimfiler_safe_mode_by_default = 0
    let g:vimfiler_time_format = '%m-%d-%y %H:%M:%S'
    let g:vimfiler_tree_closed_icon = '▸'
    let g:vimfiler_tree_indentation = 1
    let g:vimfiler_tree_leaf_icon = ''
    let g:vimfiler_tree_opened_icon = '▾'
    let g:vimfiler_ignore_pattern = [
            \ '^\.git$',
            \ '^\.DS_Store$',
            \ '^\.init\.vim-rplugin\~$',
            \ '^\.netrwhist$',
            \ '\.class$'
            \]

- repo: majutsushi/tagbar
  on_cmd: TagbarToggle
  hook_source: |
    let g:tagbar_width = 40
    if executable('jsctags')
      let g:tagbar_type_javascript = { 'ctagsbin': 'jsctags' }
    endif
  hook_always: |
    noremap <silent> <F2> :TagbarToggle<CR>

- repo: sbdchd/neoformat
  merged: 0
  loadconf: 1
  loadconf_before: 1

- repo: benekastah/neomake
  if: has('nvim')
  on_cmd: Neomake
  hook_source: |
    let g:neomake_open_list = 2
    let g:neomake_verbose = 0
    let g:neomake_serialize_abort_on_error = 0
    let g:airline#extensions#neomake#enabled = 0
  hook_add: |
    autocmd! BufWritePost * Neomake

- repo: wsdjeg/syntastic
  if: ! has('nvim')
  on_event: WinEnter
  loadconf: 1
  merged: 0

- repo: tpope/vim-surround

- repo: airblade/vim-rooter
  hook_source: |
    let g:rooter_silent_chdir = 1

- repo: benizi/vim-automkdir

- repo: kana/vim-operator-user
  merged: 0

- repo: haya14busa/vim-operator-flashy
  merged: 0

- repo: Shougo/deol.nvim
  if: has('nvim')

- repo: Shougo/vimshell.vim
  if: ! has('nvim')
  on_cmd: VimShell

- repo: luochen1990/rainbow
  hook_source: |
    let g:rainbow_active=1
    let g:rainbow_load_separately = [
        \ [ '*' , [['(', ')'], ['\[', '\]'], ['{', '}']]  ],
        \ [ '*.tex' , [['(', ')'], ['\[', '\]']]  ],
        \ [ '*.cpp' , [['(', ')'], ['\[', '\]'], ['{', '}']]  ],
        \ [ '*.{html,htm}' , [['(', ')'], ['\[', '\]'], ['{', '}'], ['<\a[^>]*>', '</[^>]*>']]  ],
    \ ]
    let g:rainbow_guifgs = ['RoyalBlue3', 'DarkOrange3', 'DarkOrchid3', 'FireBrick']
    let g:rainbow_ctermfgs = ['lightblue', 'lightgreen', 'yellow', 'red', 'magenta']

- repo: godlygeek/tabular
  on_cmd: Tabularize
  hook_always: |
    nmap <Leader>a& :Tabularize /&<CR>
    vmap <Leader>a& :Tabularize /&<CR>
    nmap <Leader>a= :Tabularize /^[^=]*\zs=<CR>
    vmap <Leader>a= :Tabularize /^[^=]*\zs=<CR>
    nmap <Leader>a=> :Tabularize /=><CR>
    vmap <Leader>a=> :Tabularize /=><CR>
    nmap <Leader>a: :Tabularize /:<CR>
    vmap <Leader>a: :Tabularize /:<CR>
    nmap <Leader>a:: :Tabularize /:\zs<CR>
    vmap <Leader>a:: :Tabularize /:\zs<CR>
    nmap <Leader>a, :Tabularize /,<CR>
    vmap <Leader>a, :Tabularize /,<CR>
    nmap <Leader>a,, :Tabularize /,\zs<CR>
    vmap <Leader>a,, :Tabularize /,\zs<CR>
    nmap <Leader>a<Bar> :Tabularize /<Bar><CR>
    vmap <Leader>a<Bar> :Tabularize /<Bar><CR>

- repo: Yggdroot/indentLine

- repo: embear/vim-localvimrc
