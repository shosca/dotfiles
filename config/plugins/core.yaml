
- repo: Shougo/denite.nvim

- repo: scrooloose/nerdcommenter

- repo: editorconfig/editorconfig-vim

- repo: Shougo/vimproc.vim
  build: make
  on_func: vimproc#

- repo: hecal3/vim-leader-guide
  on_cmd: [LeaderGuide, LeaderGuideVisual]
  on_map:
    nv: <Plug>leaderguide-
  hook_always: |
    nmap <Leader>ll <Plug>leaderguide-global
    nmap <Leader>lb <Plug>leaderguide-buffer
    nnoremap <Leader>l<Space> :<C-u>LeaderGuide ';'<CR>

- repo: krisajenkins/vim-pipe

- repo: Shougo/context_filetype.vim
  lazy: 1

- repo: scrooloose/nerdtree
  depends: nerdtree-git-plugin
  on_map: { n: <Plug> }
  on_cmd: NERDTreeToggle
  hook_source: |
  hook_always: |
    nnoremap <silent> <Leader>e :<C-u>NERDTreeToggle<CR>
    nnoremap <silent> <Leader>a :<C-u>NERDTreeFind<CR>
  hook_post_source: source $VIMPATH/config/plugins/nerdtree.vim

- repo: Xuyuanp/nerdtree-git-plugin
  on_source: nerdtree
  hook_always: |
    let g:NERDTreeDirArrowExpandable = '▷'
    let g:NERDTreeDirArrowCollapsible = '▼'

- repo: majutsushi/tagbar
  on_cmd: TagbarToggle
  hook_source: |
    let g:tagbar_width = 40
    if executable('jsctags')
      let g:tagbar_type_javascript = { 'ctagsbin': 'jsctags' }
    endif
  hook_always: |
    noremap <silent> <F2> :TagbarToggle<CR>
    let g:tagbar_iconchars = ['▷', '◢']

- repo: sbdchd/neoformat
  merged: 0
  hook_source: |
    let g:neoformat_try_formatprg = 1
    autocmd BufWritePre *.js Neoformat

- repo: w0rp/ale
  hook_source: |
    let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
    let g:ale_lint_on_insert_leave = 1
    let g:ale_lint_delay = 300
    let g:ale_open_list = 1
    let g:ale_set_loclist = 0
    let g:ale_set_quickfix = 1
    let g:ale_sign_error = '◤'
    let g:ale_sign_style_error = '◤'
    let g:ale_sign_warning = '◸'
    let g:ale_sign_style_warning = '◸'
    let g:ale_sign_info = '▷'
    nmap <silent> <C-k> <Plug>(ale_previous_wrap)
    nmap <silent> <C-j> <Plug>(ale_next_wrap)

- repo: tpope/vim-surround

- repo: airblade/vim-rooter
  hook_source: |
    let g:rooter_silent_chdir = 1

- repo: benizi/vim-automkdir

- repo: kana/vim-operator-user
  merged: 0

- repo: haya14busa/vim-operator-flashy
  merged: 0

- repo: Shougo/deol.nvim
  if: has('nvim')

- repo: Shougo/vimshell.vim
  if: ! has('nvim')
  on_cmd: VimShell

- repo: luochen1990/rainbow
  hook_source: |
    let g:rainbow_active=1
    let g:rainbow_load_separately = [
        \ [ '*' , [['(', ')'], ['\[', '\]'], ['{', '}']]  ],
        \ [ '*.tex' , [['(', ')'], ['\[', '\]']]  ],
        \ [ '*.cpp' , [['(', ')'], ['\[', '\]'], ['{', '}']]  ],
        \ [ '*.{html,htm}' , [['(', ')'], ['\[', '\]'], ['{', '}'], ['<\a[^>]*>', '</[^>]*>']]  ],
    \ ]
    let g:rainbow_guifgs = ['RoyalBlue3', 'DarkOrange3', 'DarkOrchid3', 'FireBrick']
    let g:rainbow_ctermfgs = ['lightblue', 'lightgreen', 'yellow', 'red', 'magenta']

- repo: godlygeek/tabular
  on_cmd: Tabularize
  hook_always: |
    nmap <Leader>a& :Tabularize /&<CR>
    vmap <Leader>a& :Tabularize /&<CR>
    nmap <Leader>a= :Tabularize /^[^=]*\zs=<CR>
    vmap <Leader>a= :Tabularize /^[^=]*\zs=<CR>
    nmap <Leader>a=> :Tabularize /=><CR>
    vmap <Leader>a=> :Tabularize /=><CR>
    nmap <Leader>a: :Tabularize /:<CR>
    vmap <Leader>a: :Tabularize /:<CR>
    nmap <Leader>a:: :Tabularize /:\zs<CR>
    vmap <Leader>a:: :Tabularize /:\zs<CR>
    nmap <Leader>a, :Tabularize /,<CR>
    vmap <Leader>a, :Tabularize /,<CR>
    nmap <Leader>a,, :Tabularize /,\zs<CR>
    vmap <Leader>a,, :Tabularize /,\zs<CR>
    nmap <Leader>a<Bar> :Tabularize /<Bar><CR>
    vmap <Leader>a<Bar> :Tabularize /<Bar><CR>

- repo: Yggdroot/indentLine

- repo: thinca/vim-localrc

- repo: gioele/vim-autoswap

- repo: thinca/vim-prettyprint
  on_cmd: PP
  on_func: PP

- repo: rhysd/accelerated-jk
  on_map:
    n: <Plug>

- repo: vimwiki/vimwiki
  on_map: { n: <Plug> }
  on_cmd: Vimwiki
  hook_add: |
    let g:vimwiki_use_calendar = 1
    let g:vimwiki_hl_headers = 1
    let g:vimwiki_hl_cb_checked = 1
    let g:vimwiki_autowriteall = 0
  hook_source: |
    let g:vimwiki_list = [
    \   { 'diary_header': 'Diary',
    \     'diary_link_fmt': '%Y-%m/%d',
    \     'auto_toc': 1,
    \     'path': '~/docs/wiki/',
    \     'syntax': 'markdown',
    \     'ext': '.md' },
    \   { 'path': '~/docs/blog/',
    \     'syntax': 'markdown',
    \     'ext': '.md' }
    \ ]

- repo: ludovicchabant/vim-gutentags
  if: executable('ctags')
  on_path: .*
  hook_add: |
    let g:gutentags_cache_dir = $VARPATH.'/tags'
    let g:gutentags_generate_on_write = 1
    let g:gutentags_generate_on_missing = 0
    let g:gutentags_generate_on_new = 0

- repo: matze/vim-move
  hook_source: |
    let g:move_key_modifier = 'C'

- repo: rafi/vim-badge

- repo: morhetz/gruvbox

