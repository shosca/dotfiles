
- repo: wsdjeg/dein-ui.vim

- repo: roxma/nvim-yarp

- repo: tpope/vim-dotenv
  on_cmd: Dotenv

- repo: Shougo/denite.nvim

- repo: chemzqm/unite-location

- repo: chemzqm/denite-git

- repo: scrooloose/nerdcommenter

- repo: editorconfig/editorconfig-vim

- repo: RRethy/vim-illuminate

- repo: epeli/slimux
  hook_always: |
    map <Leader>s :SlimuxREPLSendLine<CR>
    vmap <Leader>s :SlimuxREPLSendSelection<CR>
    map <Leader>b :SlimuxREPLSendBuffer<CR>
    map <Leader>a :SlimuxShellLast<CR>
    map <Leader>k :SlimuxSendKeysLast<CR>
    map <C-c><C-c> :SlimuxREPLSendLine<CR>
    vmap <C-c><C-c> :SlimuxREPLSendSelection<CR>

- repo: Shougo/vimproc.vim
  build: make
  on_func: vimproc#

- repo: Shougo/context_filetype.vim
  lazy: 1

- repo: scrooloose/nerdtree
  on_cmd: NERDTreeToggle
  hook_source: |
  hook_post_source: source $VIMPATH/config/plugins/nerdtree.vim
  hook_always: |
    noremap <silent> <F3> :NERDTreeToggle<CR>

- repo: Xuyuanp/nerdtree-git-plugin
  on_source: nerdtree
  hook_always: |
    let g:NERDTreeDirArrowExpandable = '▷'
    let g:NERDTreeDirArrowCollapsible = '▼'

- repo: majutsushi/tagbar
  on_cmd: TagbarToggle
  hook_source: |
    let g:tagbar_width = 40
    if executable('jsctags')
      let g:tagbar_type_javascript = { 'ctagsbin': 'jsctags' }
    endif
  hook_always: |
    noremap <silent> <F2> :TagbarToggle<CR>
    let g:tagbar_iconchars = ['▷', '◢']

# repo: w0rp/ale
# hook_source: |
#   let g:ale_linters_explicit = 1
#   let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
#   let g:ale_lint_on_insert_leave = 1
#   let g:ale_lint_delay = 300
#   let g:ale_set_loclist = 0
#   let g:ale_set_quickfix = 1
#   let g:ale_sign_error = '◤'
#   let g:ale_sign_style_error = '◤'
#   let g:ale_sign_warning = '◸'
#   let g:ale_sign_style_warning = '◸'
#   let g:ale_sign_info = '▷'
#   nmap <silent> <C-k> <Plug>(ale_previous_wrap)
#   nmap <silent> <C-j> <Plug>(ale_next_wrap)

- repo: machakann/vim-sandwich

- repo: airblade/vim-rooter
  hook_source: |
    let g:rooter_silent_chdir = 1

- repo: benizi/vim-automkdir

- repo: Shougo/deol.nvim
  if: has('nvim')
  on_cmd: Deol

- repo: luochen1990/rainbow
  hook_source: |
    let g:rainbow_active=1
    let g:rainbow_load_separately = [
        \ [ '*' , [['(', ')'], ['\[', '\]'], ['{', '}']]  ],
        \ [ '*.tex' , [['(', ')'], ['\[', '\]']]  ],
        \ [ '*.cpp' , [['(', ')'], ['\[', '\]'], ['{', '}']]  ],
        \ [ '*.{html,htm}' , [['(', ')'],
        \   ['\[', '\]'], ['{', '}'], ['<\a[^>]*>', '</[^>]*>']]  ],
    \ ]
    let g:rainbow_guifgs = ['RoyalBlue3', 'DarkOrange3',
        \ 'DarkOrchid3', 'FireBrick']
    let g:rainbow_ctermfgs = ['lightblue', 'lightgreen',
        \ 'yellow', 'red', 'magenta']

- repo: godlygeek/tabular
  on_cmd: Tabularize
  hook_always: |
    nmap <Leader>a& :Tabularize /&<CR>
    vmap <Leader>a& :Tabularize /&<CR>
    nmap <Leader>a= :Tabularize /^[^=]*\zs=<CR>
    vmap <Leader>a= :Tabularize /^[^=]*\zs=<CR>
    nmap <Leader>a=> :Tabularize /=><CR>
    vmap <Leader>a=> :Tabularize /=><CR>
    nmap <Leader>a: :Tabularize /:<CR>
    vmap <Leader>a: :Tabularize /:<CR>
    nmap <Leader>a:: :Tabularize /:\zs<CR>
    vmap <Leader>a:: :Tabularize /:\zs<CR>
    nmap <Leader>a, :Tabularize /,<CR>
    vmap <Leader>a, :Tabularize /,<CR>
    nmap <Leader>a,, :Tabularize /,\zs<CR>
    vmap <Leader>a,, :Tabularize /,\zs<CR>
    nmap <Leader>a<Bar> :Tabularize /<Bar><CR>
    vmap <Leader>a<Bar> :Tabularize /<Bar><CR>

- repo: Yggdroot/indentLine

- repo: gioele/vim-autoswap

- repo: thinca/vim-prettyprint
  on_cmd: PP
  on_func: PP

- repo: rhysd/accelerated-jk
  on_map:
    n: <Plug>

- repo: jsfaint/gen_tags.vim
  if: executable('ctags')
  hook_always: |
    let g:loaded_gentags#gtags=1
    let g:gen_tags#ctags_auto_gen=1

- repo: rafi/awesome-vim-colorschemes

- repo: vim-airline/vim-airline

- repo: vim-airline/vim-airline-themes
